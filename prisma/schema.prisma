// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                    String    @id @default(cuid()) @map("_id")
  name                  String?
  email                 String?   @unique
  emailVerified         DateTime?
  image                 String    @default("https://storage.ma-dy.com/img/Profile/5.jpg")
  password              String?
  passwordResetToken    String?   @unique
  passwordResetTokenExp DateTime?
  accounts              Account[]
  sessions              Session[]
  role                  String    @default("user")
}

model VerificationToken {
  identifier String   @id @default(cuid()) @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model TestProduct {
  id            String   @id @default(cuid()) @map("_id")
  defaultImage  String
  images        String[]
  imageId       String
  title         String
  slogan        String
  description   String
  category      String
  category_type String
  city          String?
  address       String?
  tags          String[]
  rating        Int?
  contact       Int?
  price         Int?
  isFeatured    Boolean
  isActivated   Boolean
}
